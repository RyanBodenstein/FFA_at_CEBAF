#
# how to generate the decks for CEBAF
#

This branch contains all the individual decks describing the CEBAF
machine as well as a number of scripts used for generating specific
beamlines or interacting with the CED. Most users will only have to deal with the former.

ELEGANT stores the layout in the .lte files while the .ele files are
the command files needed to run the calculations.

For the most part, the lattice description employs units that are
independent of the momentum of the incoming beam. Hence, dipoles are
described in terms of bending angle and trajectory length instead of
bending fields. Likewise, quadrupole be focussing is given in terms of
K1 which is defined as G/(brho)


This allows for specifying the input beam momentum in the command
(.ele) file and evaluate the optics for that same lattice file (.lte).

This concept breaks down however in recirculating machines where the
linacs are by necessity multipass. The quadrupoles are set to a
specific gradient, namely the one corresponding to a period 120
degrees FODO like structure for the first pass in the north and south
linacs.

These beamlines as well as the short reinjection chicane in the
northwest corner describe the quadrupoles directly in Tesla/m

This setpoint depends on the anticipated beam momentum which in turn
is governed by the accelerating gradient.


A set of pre-defined beamlines can be generated by a script called ./makedecksEL

It will concatenate the individual decks accordingly and generate a
number of command and lattice files for the possible paths.  All beams
start at the backface of the 1/4 cryomodule (in front of ITV0L01).

the naming convention makes it explicit which beamline is considered.

ihd.ele -> from injector to hall d
iha1.ele -> from injector to hall A first pass,
iha2.ele ...
..

etc..


The script ./scalelinacs allows one to specify the intended linac
gain. It has to be run first by passing the gain in MeV per
linac. Currently, we are supporting symmetric linacs only but that is
easily changeable.



This script will generate sdds files with the proper scaling for the
linac and reinjection quadrupoles.

One last step will be to edit the command file (ihd.ele for example)
to apply the correct multiplicative factor under the &alter_elements.

For 1090 per pass, it is 1.0.  scalelinacs will return the value to 
type for other gains:

./scalelinacs 900
start NL is 101.559633027523
start SL is 1001.55963302752
start reinj is 1901.55963302752
ratio is 0.825688073394495

that "ratio" is what one would put for  multiplicative in the 
&alter_elements . There is a comment in the .ele file which tells
 you where to put it. One also needs to scale the 0L04 zone accordingly.

because of the S/R geometry, the injector output momentum has to be proportional to
the linac gain as such:

  newINJector= linacGAIN/1090*123

We usually leave 0L03 at 22.5 MeV of kinetic acceleration and the first part of the injector
up to the exit of the 1/4 cryo gets to 5.8 MeV/c kinetia. This means that one has to 
rescale 0L04 zone by (newInjector-5.8-22.5)/(123-5.8-22.5) 

After that, running ihd.ele will trigger the evaluation. It will
rematch the injector into the linac and then propagate a beam bunch to
hall D.
 
UPDATE:
  there is now a script called makecmdfile which updates all the command files.
it takes the ihd.ele as a template. So, one has to set up ihd.ele  as described above and the other
 ones will be generated.

The default is 1024 particles(in &bunched beam) but if  one is only
interested in single particle dynamics such as twiss values, this can
be set to one to speed up the evaluation.

Same thing for the other decks.

